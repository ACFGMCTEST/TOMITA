
#ifndef SLOPE_HPP
#define SLOPE_HPP

#include "../../../../../Base/CBase.h"
#include "../../../../Graphic/CBox.h"
#include "../../../../Graphic/CBox.h"
#include "../../../../../Define/Define.h"
#include "../../../../Collision/CCollider.h"

/*あたり判定:ボックス設定*/
#define OBB_POS CVector3(0.0f,0.0f,0.0f) 
#define OBB_SIZE CVector3(MAPCHIP_SIZE, MAPCHIP_SIZE, MAPCHIP_SIZE)
#define SMALL_SIZE(num) num*0.999f//ボックスとかぶらない用
#define SET_OBB OBB_POS,OBB_SIZE,&mMatrix

/*坂クラス*/
class CSlope : public CBox{


public:
	

	int mMapChipX, mMapChipZ;//自分のマップチップ上の座標値

	bool mFlagRot;//回転したか判断

	/*坂の現在の向いている方向*/
	enum  ESlpoeRot{
		E_FRONT,// 前
		E_BACK,// 後ろ
		E_RIGHT,// 右
		E_LEFT,// 左
	};
	ESlpoeRot eSlopeRot = E_FRONT;//坂の向き


	CCollider *mpColBox;		//あたり判定


	float mMinX;//サイズ小さいほう
	float mMaxX;//サイズ大きいほう
	float mMinY;//サイズ小さいほう
	float mMaxY;//サイズ大きいほう
	float mMinZ;//サイズ小さいほう
	float mMaxZ;//サイズ大きいほう

	/*サイズすべて*/
	void SetSize(float size);

	CSlope(){}

	/*コンストラクタ 
	pos = 位置
	x , y = 自分のマップ上座標値*/
	CSlope(CVector3 pos,int x,int z);
	/*マップによって向きを変える デフォルトは，左下がり右上がり*/
	void MapRot();
	/*アップデート*/
	void Update();
	/*描画処理*/
	void Render();
	/*坂の中間値*/
	CVector3 MiddlePos(const CVector3 &pos) const;
	/*坂の傾きにする
	*rot =  回転する値
	*/
	void SlpoeRot(CVector3 *rot) const;


};

#endif